{
  ".source.hack": {
    "function __construct": {
      "prefix": "con",
      "body": "${1:public} function __construct($2) {\n\t${3:// code...;}$0\n}"
    },
    "Class Variable": {
      "prefix": "doc_v",
      "body": "/**\n * ${4:undocumented class variable}\n */\n${1:private} ${2:type} $${3:name};$0"
    },
    "Start Docblock": {
      "prefix": "/**",
      "body": "/**\n * $0\n */"
    },
    "class …": {
      "prefix": "class",
      "body": "/**\n * $1\n */\nclass ${2:ClassName} ${3:extends ${4:AnotherClass}} {\n\t${5:public} function ${6:__construct}($7) {\n\t\t${0:// code...}\n\t}\n}\n"
    },
    "trait …": {
      "prefix": "trait",
      "body": "/**\n * $1\n */\ntrait ${2:TraitName} {\n\tfunction ${3:functionName}($4): $5 {\n\t\t${6:// code...}\n\t}\n}\n"
    },
    "const _ _ = _": {
      "prefix": "const",
      "body": "const ${1:type} ${2:name} = ${3:value};\n$0"
    },
    "do … while …": {
      "prefix": "do",
      "body": "do {\n\t${0:// code...}\n} while (${1:\\$a <= 10});"
    },
    "echo \"…\"": {
      "prefix": "echo",
      "body": "echo \"${1:string}\";$0"
    },
    "else …": {
      "prefix": "else",
      "body": "else {\n\t${0:// code...}\n}"
    },
    "elseif …": {
      "prefix": "elseif",
      "body": "else if (${1:condition}) {\n\t${0:// code...}\n}"
    },
    "for …": {
      "prefix": "for",
      "body": "for ($${1:i} = ${2:0}; $${1:i} < $3; $${1:i}++) { \n\t${0:// code...}\n}"
    },
    "foreach …": {
      "prefix": "foreach",
      "body": "foreach ($${1:variable} as $${2:key} ${3:=> $${4:value}}) {\n\t${0:// code...}\n}"
    },
    "function …": {
      "prefix": "func",
      "body": "${1:public }function ${2:functionName}(${3:$${4:value}${5:=''}})\n{\n\t${0:// code...}\n}"
    },
    "if … else …": {
      "prefix": "ifelse",
      "body": "if (${1:condition}) {\n\t${2:// code...}\n} else {\n\t${3:// code...}\n}\n$0"
    },
    "if …": {
      "prefix": "if",
      "body": "if (${1:condition}) {\n\t${0:// code...}\n}"
    },
    "$… = ( … ) ? … : …": {
      "prefix": "if?",
      "body": "$${1:retVal} = (${2:condition}) ? ${3:\\$a} : ${4:\\$b} ;"
    },
    "… => …": {
      "prefix": "keyval",
      "body": "'$1' => $2${3:,} $0"
    },
    "require_once …": {
      "prefix": "req1",
      "body": "require_once '${1:file}';\n$0"
    },
    "return": {
      "prefix": "ret",
      "body": "return $1;$0"
    },
    "return false": {
      "prefix": "ret0",
      "body": "return false;$0"
    },
    "return true": {
      "prefix": "ret1",
      "body": "return true;$0"
    },
    "switch …": {
      "prefix": "switch",
      "body": "switch (${1:variable}) {\n\tcase '${2:value}':\n\t\t${3:// code...}\n\t\tbreak;\n\t$0\n\tdefault:\n\t\t${4:// code...}\n\t\tbreak;\n}"
    },
    "case …": {
      "prefix": "case",
      "body": "case '${1:variable}':\n\t${0:// code...}\n\tbreak;"
    },
    "$this->…": {
      "prefix": "this",
      "body": "\\$this->$0"
    },
    "echo $this->…": {
      "prefix": "ethis",
      "body": "echo \\$this->$1;\n$0"
    },
    "Throw Exception": {
      "prefix": "throw",
      "body": "throw new $1Exception(${2:\"${3:Error Processing Request}\"}${4:, ${5:1}});\n$0"
    },
    "while …": {
      "prefix": "while",
      "body": "while (${1:$$a <= 10}) {\n\t${0:// code...}\n}"
    }
  }
}